{% extends 'base.html' %}
{% block title %}Login{% endblock %}

{% block head %}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
  body, html {
    height: 100%;
    margin: 0;
    font-family: 'Poppins', Arial, sans-serif;
  }

  .login-page-wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100vh; /* Full viewport height */
    background: linear-gradient(135deg, #232526 0%, #414345 100%);
    color: #e0e0e0; /* Light text color for dark background */
  }

  .login-card-container {
    flex-grow: 1; /* Allows this container to take up available space */
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
  }

  .card-modern {
    width: 100%;
    max-width: 380px;
    background: rgba(40, 42, 44, 0.85); /* Darker, semi-transparent card */
    backdrop-filter: blur(10px);
    border-radius: 1.5rem; /* Slightly less rounded */
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    padding: 1.5rem; /* Adjusted padding */
  }

  .card-title {
    font-weight: 700;
    font-size: 1.75rem; /* Larger title */
    color: #58a6ff; /* Brighter blue for title */
    margin-bottom: 1.5rem;
  }

  .form-label {
    font-weight: 500;
    color: #b0b0b0; /* Lighter gray for labels */
    margin-bottom: 0.3rem;
    font-size: 0.9rem;
  }

  .form-control,
  .form-select {
    border-radius: 0.75rem; /* Consistent border-radius */
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 0.75rem 1rem;
    font-size: 0.95rem;
    background: rgba(255, 255, 255, 0.05); /* Very subtle background for inputs */
    color: #e0e0e0; /* Light text for input */
    transition: border-color 0.2s, box-shadow 0.2s;
  }

  .form-control::placeholder {
    color: #888;
  }

  .form-control:focus,
  .form-select:focus {
    border-color: #58a6ff;
    box-shadow: 0 0 0 0.2rem rgba(88, 166, 255, 0.25);
    background: rgba(255, 255, 255, 0.08);
    color: #ffffff;
  }

  .custom-btn {
    width: 100%;
    color: #fff;
    border: none;
    padding: 10px 12px; /* Adjusted padding */
    border-radius: 0.75rem; /* Consistent border-radius */
    font-size: 1rem; /* Adjusted font size */
    font-weight: 600;
    cursor: pointer;
    margin-bottom: 1rem; /* Consistent margin */
    transition: filter 0.2s, box-shadow 0.2s;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }
  
  .btn-primary.custom-btn, /* For Login as Attendee */
  button[type="submit"].custom-btn { /* For main Login button */
     background: linear-gradient(90deg, #3498db 0%, #8e54e9 100%);
  }

  .btn-success.custom-btn { /* For Face Login button */
    background: linear-gradient(90deg, #27ae60 0%, #00c6ff 100%);
  }
  
  .custom-btn.mini-btn { /* For Register/Forgot links */
    font-size: 0.9rem;
    padding: 8px 0;
    font-weight: 500;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    text-align: center;
    display: inline-block; /* To allow width setting */
  }

  .custom-btn:hover {
    filter: brightness(1.1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    text-decoration: none; /* Ensure links don't get underlined on hover if they are buttons */
  }
  
  .custom-btn:disabled {
    background: #555; /* Darker disabled state */
    cursor: not-allowed;
    filter: brightness(0.8);
  }

  .login-footer {
    width: 100%;
    text-align: center;
    padding: 1rem 0;
    font-size: 0.85rem;
    color: #999; /* Footer text color */
    background-color: rgba(0,0,0,0.1); /* Optional: slight background for footer */
  }

  .alert-warning {
    background-color: rgba(255, 193, 7, 0.1); /* Lighter warning for dark theme */
    border-color: rgba(255, 193, 7, 0.3);
    color: #ffc107;
    border-radius: 0.75rem;
  }

  .text-danger {
    color: #f46a6a !important; /* Brighter red for errors */
  }

  /* Modal styling for dark theme */
  .modal-content {
    background-color: #2c2f33; /* Dark background for modal */
    color: #e0e0e0;
    border-radius: 1rem;
    border: 1px solid rgba(255,255,255,0.1);
  }
  .modal-header {
    border-bottom: 1px solid rgba(255,255,255,0.1);
  }
  .modal-header .btn-close {
    filter: invert(1) grayscale(100%) brightness(200%); /* Make close button visible on dark */
  }
  .modal-footer {
    border-top: 1px solid rgba(255,255,255,0.1);
  }
  .modal-title {
    color: #58a6ff;
  }
</style>
{% endblock %}

{% block content %}
<div class="login-page-wrapper">
  <div class="login-card-container">
    <div class="card card-modern">
      <div class="card-body">
        <h3 class="card-title text-center">Login</h3>

        {% with messages = get_flashed_messages(with_categories=true) %}
          {% if messages %}
            {% for category, message in messages %}
              <div class="alert alert-{{ category if category else 'info' }} mt-3 py-2 px-3 small text-center" id="flash-message-{{ loop.index }}">{{ message }}</div>
              <script>
                setTimeout(function() {
                  var flash = document.getElementById('flash-message-{{ loop.index }}');
                  if(flash) flash.style.display = 'none';
                }, 5000);
              </script>
            {% endfor %}
          {% endif %}
        {% endwith %}

        {% if attendees and attendees|length > 0 %}
        <form method="post" action="{{ url_for('attendee_login') }}" class="mb-3">
          <div class="mb-3">
            <label for="attendee_name" class="form-label">Select your name:</label>
            <select class="form-select" id="attendee_name" name="attendee_id">
              {% for attendee in attendees %}
              <option value="{{ attendee.id }}">{{ attendee.name }}</option>
              {% endfor %}
            </select>
          </div>
          <button type="submit" class="btn btn-primary custom-btn mb-2">Login as Attendee</button>
          <button type="button" class="btn btn-success custom-btn" data-bs-toggle="modal" data-bs-target="#faceLoginModal">
            <i class="bi bi-camera-video"></i> Face Login
          </button>
        </form>
        <hr style="border-color: rgba(255,255,255,0.1);">
        {% endif %}

        <form method="post" action="{{ url_for('login') }}" novalidate>
          {{ form.csrf_token }}
          <div class="mb-3">
            {{ form.email.label(class="form-label") }}
            {{ form.email(class="form-control", placeholder="Enter your email", autofocus=True, required=True) }}
            {% for error in form.email.errors %}
              <div class="text-danger small mt-1">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ form.password.label(class="form-label") }}
            {{ form.password(class="form-control", placeholder="Enter your password", required=True) }}
            {% for error in form.password.errors %}
              <div class="text-danger small mt-1">{{ error }}</div>
            {% endfor %}
          </div>
          <button type="submit" class="custom-btn mb-3"><i class="bi bi-box-arrow-in-right me-2"></i>Login</button>
          
          <div class="d-flex justify-content-between mb-3">
            <a href="{{ url_for('register') }}" class="custom-btn mini-btn" style="width:48%;">Register</a>
            <a href="{{ url_for('forgot_password') }}" class="custom-btn mini-btn" style="width:48%; background:linear-gradient(90deg,#00c6ff 0%,#0072ff 100%);">Forgot?</a>
          </div>

          <a href="{{ url_for('register') }}" class="custom-btn mb-3" style="font-size:0.95rem; background:linear-gradient(90deg,#43cea2 0%,#185a9d 100%);">Don't have an account? Register here</a>
          
          {% if not admin_exists %}
          <p class="mt-2 text-warning small text-center"><strong>No admin?</strong> <a href="{{ url_for('admin_register') }}" class="text-warning">Register the first admin here</a>.</p>
          {% endif %}
        </form>
      </div>
    </div>
  </div>

  <div class="login-footer">
    &copy; 2025 Event Manager | v1.0
  </div>
</div>

<!-- Face Login Modal -->
<div class="modal fade" id="faceLoginModal" tabindex="-1" aria-labelledby="faceLoginModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="faceLoginModalLabel">Face Login</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="d-flex justify-content-center mb-3">
          <button id="webcamBtn" class="btn btn-primary custom-btn mx-1" style="width:auto; padding: 8px 15px;">Use Webcam</button>
          <button id="uploadBtn" class="btn btn-secondary custom-btn mx-1" style="width:auto; padding: 8px 15px; background: #6c757d;">Upload Photo</button>
        </div>
        <div id="webcamSection" style="display:none;" class="text-center">
          <video id="webcam" width="100%" height="240" autoplay style="border-radius:0.5rem; background: #000;"></video>
          <button id="captureBtn" class="btn btn-success custom-btn mt-2" style="width:auto; padding: 8px 15px;">Capture</button>
          <canvas id="canvas" width="320" height="240" style="display:none;"></canvas>
        </div>
        <div id="uploadSection" style="display:none;" class="text-center">
          <input type="file" id="photoInput" accept="image/*" class="form-control mb-2" />
          <img id="previewImg" src="#" alt="Preview" style="display:none;max-width:100%;max-height:200px;border-radius:0.5rem; margin-top:10px;" />
        </div>
      </div>
      <div class="modal-footer">
        <form id="faceLoginForm" method="post" action="{{ url_for('attendee_face_login') }}" enctype="multipart/form-data" style="width:100%;">
          <input type="hidden" name="attendee_id" value="{{ attendees[0].id if attendees and attendees|length > 0 else '' }}" id="modalAttendeeId">
          <input type="hidden" name="face_image" id="faceImageInput">
          <button type="submit" class="btn btn-primary custom-btn w-100">Submit Face Login</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  // Ensure Bootstrap JS is loaded for modal functionality
  var script = document.createElement('script');
  script.src = "https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js";
  document.head.appendChild(script);

  // Face Login Modal Logic
  document.addEventListener('DOMContentLoaded', function() {
    const webcamBtn = document.getElementById('webcamBtn');
    const uploadBtn = document.getElementById('uploadBtn');
    const webcamSection = document.getElementById('webcamSection');
    const uploadSection = document.getElementById('uploadSection');
    const webcam = document.getElementById('webcam');
    const captureBtn = document.getElementById('captureBtn');
    const canvas = document.getElementById('canvas');
    const photoInput = document.getElementById('photoInput');
    const previewImg = document.getElementById('previewImg');
    const faceImageInput = document.getElementById('faceImageInput');
    const faceLoginForm = document.getElementById('faceLoginForm');
    const modalAttendeeIdSelect = document.getElementById('attendee_name'); // The main page select
    const modalAttendeeIdHiddenInput = document.getElementById('modalAttendeeId'); // Hidden input in modal form

    if (webcamBtn) {
        webcamBtn.addEventListener('click', () => {
            webcamSection.style.display = 'block';
            uploadSection.style.display = 'none';
            previewImg.style.display = 'none';
            photoInput.value = ''; // Clear file input
            navigator.mediaDevices.getUserMedia({ video: true })
                .then(stream => {
                    webcam.srcObject = stream;
                })
                .catch(err => {
                    console.error("Error accessing webcam: ", err);
                    alert("Could not access webcam. Please ensure permissions are granted.");
                });
        });
    }

    if (uploadBtn) {
        uploadBtn.addEventListener('click', () => {
            webcamSection.style.display = 'none';
            uploadSection.style.display = 'block';
            if (webcam.srcObject) {
                webcam.srcObject.getTracks().forEach(track => track.stop()); // Stop webcam
            }
        });
    }

    if (captureBtn) {
        captureBtn.addEventListener('click', () => {
            canvas.getContext('2d').drawImage(webcam, 0, 0, canvas.width, canvas.height);
            let image_data_url = canvas.toDataURL('image/jpeg');
            faceImageInput.value = image_data_url; // Set for form submission
            previewImg.src = image_data_url; // Show captured image
            previewImg.style.display = 'block';
            if (webcam.srcObject) {
                webcam.srcObject.getTracks().forEach(track => track.stop()); // Stop webcam
            }
            webcamSection.style.display = 'none'; // Hide webcam view
            uploadSection.style.display = 'block'; // Show upload section with preview
        });
    }

    if (photoInput) {
        photoInput.addEventListener('change', function(event) {
            if (event.target.files && event.target.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    previewImg.src = e.target.result;
                    previewImg.style.display = 'block';
                    faceImageInput.value = e.target.result; // Set for form submission
                }
                reader.readAsDataURL(event.target.files[0]);
            }
        });
    }
    
    // Update hidden attendee ID in modal when main selection changes
    if (modalAttendeeIdSelect && modalAttendeeIdHiddenInput) {
        modalAttendeeIdSelect.addEventListener('change', function() {
            modalAttendeeIdHiddenInput.value = this.value;
        });
        // Set initial value if attendees exist
        if (modalAttendeeIdSelect.options.length > 0) {
             modalAttendeeIdHiddenInput.value = modalAttendeeIdSelect.value;
        }
    }
    
    // Handle modal show event to set attendee ID
    const faceLoginModal = document.getElementById('faceLoginModal');
    if (faceLoginModal && modalAttendeeIdSelect && modalAttendeeIdHiddenInput) {
        faceLoginModal.addEventListener('show.bs.modal', function () {
            if (modalAttendeeIdSelect.options.length > 0) {
                modalAttendeeIdHiddenInput.value = modalAttendeeIdSelect.value;
            }
        });
    }

  });
</script>
{% endblock %}